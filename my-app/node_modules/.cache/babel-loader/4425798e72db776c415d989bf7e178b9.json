{"ast":null,"code":"var _jsxFileName = \"D:\\\\docs\\\\Bootcamp_Indra\\\\album\\\\my-app\\\\src\\\\components\\\\AlbumContainer\\\\AlbumContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport Image from \"../Image/Image\";\nimport FavoriteAlbums from \"../FavoriteAlbums/FavoriteAlbums\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport { Context } from \"../../App\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AlbumContainer() {\n  _s();\n\n  const {\n    library,\n    favorites,\n    setFavorites\n  } = useContext(Context);\n\n  const handleSelect = photo => {\n    if (favorites.some(elem => elem.id === photo.id)) {} else {\n      setFavorites(prevValue => [...prevValue, photo]);\n    }\n  };\n\n  const handleDelete = id => {\n    const indexToDelete = favorites.findIndex(elem => elem.id === id);\n    setFavorites(favorites.slice(0, indexToDelete).concat(favorites.slice(indexToDelete + 1, favorites.length)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), favorites.length > 0 && /*#__PURE__*/_jsxDEV(FavoriteAlbums, {\n          list: favorites,\n          handleDelete: handleDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: {\n            xs: 2,\n            md: 2\n          },\n          columns: {\n            xs: 4,\n            sm: 8,\n            md: 12\n          },\n          children: library.length > 0 ? library.filter(elem => elem.volumeInfo.imageLinks).map(elem => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            sm: 2,\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              info: { ...elem.volumeInfo,\n                id: elem.id\n              },\n              handleSelect: handleSelect\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this)\n          }, Math.floor(Math.random() * 100000000), false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 23\n          }, this)) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n}\n\n_s(AlbumContainer, \"c2MyMdr/N3cU9ENv63aUyXDCRYg=\");\n\n_c = AlbumContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlbumContainer\");","map":{"version":3,"sources":["D:/docs/Bootcamp_Indra/album/my-app/src/components/AlbumContainer/AlbumContainer.js"],"names":["React","useContext","Image","FavoriteAlbums","CssBaseline","Container","Grid","Context","SearchBar","AlbumContainer","library","favorites","setFavorites","handleSelect","photo","some","elem","id","prevValue","handleDelete","indexToDelete","findIndex","slice","concat","length","xs","md","sm","filter","volumeInfo","imageLinks","map","Math","floor","random"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react';\r\nimport Image from \"../Image/Image\";\r\nimport FavoriteAlbums from \"../FavoriteAlbums/FavoriteAlbums\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport {Context} from \"../../App\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\n\r\nexport default function AlbumContainer() {\r\n    const { library, favorites, setFavorites } = useContext(Context);\r\n  \r\n    const handleSelect = (photo) => {\r\n      if (favorites.some((elem) => elem.id === photo.id)) {\r\n      } else {\r\n        setFavorites((prevValue) => [...prevValue, photo]);\r\n      }\r\n    };\r\n  \r\n    const handleDelete = (id) => {\r\n      const indexToDelete = favorites.findIndex((elem) => elem.id === id);\r\n      setFavorites(\r\n        favorites\r\n          .slice(0, indexToDelete)\r\n          .concat(favorites.slice(indexToDelete + 1, favorites.length))\r\n      );\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <React.Fragment>\r\n          <CssBaseline />\r\n          <Container maxWidth=\"md\">\r\n            <SearchBar />\r\n            {favorites.length > 0 && (\r\n              <FavoriteAlbums list={favorites} handleDelete={handleDelete} />\r\n            )}\r\n            <Grid\r\n              container\r\n              spacing={{ xs: 2, md: 2 }}\r\n              columns={{ xs: 4, sm: 8, md: 12 }}\r\n            >\r\n              {library.length > 0\r\n                ? library\r\n                    .filter((elem) => elem.volumeInfo.imageLinks)\r\n                    .map((elem) => (\r\n                      <Grid\r\n                        item\r\n                        xs={2}\r\n                        sm={2}\r\n                        md={3}\r\n                        key={Math.floor(Math.random() * 100000000)}\r\n                      >\r\n                        <Image\r\n                          info={{ ...elem.volumeInfo, id: elem.id }}\r\n                          handleSelect={handleSelect}\r\n                        />\r\n                      </Grid>\r\n                    ))\r\n                : null}\r\n            </Grid>\r\n          </Container>\r\n        </React.Fragment>\r\n      </div>\r\n    );\r\n  }\r\n\r\n"]},"metadata":{},"sourceType":"module"}